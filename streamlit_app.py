import streamlit as st
import requests
import json
import os
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="RAG Support Bot",
    page_icon="üè¶",
    layout="wide",
    initial_sidebar_state="expanded"
)

# CSS —Å—Ç–∏–ª–∏
st.markdown("""
<style>
    .main-header {
        font-size: 2.5rem;
        color: #1f77b4;
        text-align: center;
        margin-bottom: 2rem;
    }
    .chat-message {
        padding: 1rem;
        border-radius: 0.5rem;
        margin: 0.5rem 0;
    }
    .user-message {
        background-color: #e3f2fd;
        border-left: 4px solid #2196f3;
    }
    .support-message {
        background-color: #e8f5e8;
        border-left: 4px solid #4caf50;
    }
    .ai-suggestion {
        background-color: #fff3e0;
        border: 1px solid #ff9800;
        border-radius: 0.5rem;
        padding: 0.5rem;
        margin: 0.25rem 0;
        cursor: pointer;
    }
    .ai-suggestion:hover {
        background-color: #ffe0b2;
    }
</style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.markdown('<h1 class="main-header">üè¶ RAG Support Bot - –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</h1>', unsafe_allow_html=True)

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
with st.sidebar:
    st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    # –í—ã–±–æ—Ä API
    api_provider = st.selectbox(
        "–ü—Ä–æ–≤–∞–π–¥–µ—Ä API",
        ["OpenAI", "DeepSeek", "–õ–æ–∫–∞–ª—å–Ω–∞—è Ollama"]
    )
    
    if api_provider == "OpenAI":
        api_key = st.text_input("OpenAI API Key", type="password", help="–ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –Ω–∞ https://platform.openai.com")
        model_name = st.selectbox("–ú–æ–¥–µ–ª—å", ["gpt-3.5-turbo", "gpt-4"])
    elif api_provider == "DeepSeek":
        api_key = st.text_input("DeepSeek API Key", type="password", help="–ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –Ω–∞ https://platform.deepseek.com")
        model_name = "deepseek-chat"
    else:
        api_key = ""
        model_name = "support-bot"
        st.info("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–∞—è Ollama –º–æ–¥–µ–ª—å")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    st.header("üë§ –û–ø–µ—Ä–∞—Ç–æ—Ä")
    operator_name = st.text_input("–ò–º—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", value="–û–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏")
    company_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏", value="–ù–∞—à –±–∞–Ω–∫")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    st.header("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    if 'total_messages' not in st.session_state:
        st.session_state.total_messages = 0
    if 'ai_suggestions_used' not in st.session_state:
        st.session_state.ai_suggestions_used = 0
    
    st.metric("–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π", st.session_state.total_messages)
    st.metric("AI –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ", st.session_state.ai_suggestions_used)

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
col1, col2 = st.columns([1, 2])

with col1:
    st.header("üí¨ –ß–∞—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏")
    
    # –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
    if 'chats' not in st.session_state:
        st.session_state.chats = {
            "–ö–ª–∏–µ–Ω—Ç 1": {
                "messages": [
                    {"type": "user", "text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù–µ –º–æ–≥—É –≤–æ–π—Ç–∏ –≤ –º–æ–±–∏–ª—å–Ω—ã–π –±–∞–Ω–∫", "time": "10:30"},
                    {"type": "support", "text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ü–æ–º–æ–≥—É –≤–∞–º —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å –≤—Ö–æ–¥–æ–º", "time": "10:31"}
                ],
                "status": "active"
            },
            "–ö–ª–∏–µ–Ω—Ç 2": {
                "messages": [
                    {"type": "user", "text": "–ö–∞–∫–∏–µ –∫–æ–º–∏—Å—Å–∏–∏ –∑–∞ –ø–µ—Ä–µ–≤–æ–¥—ã?", "time": "11:15"}
                ],
                "status": "waiting"
            },
            "–ö–ª–∏–µ–Ω—Ç 3": {
                "messages": [
                    {"type": "user", "text": "–•–æ—á—É —Å–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "time": "11:45"}
                ],
                "status": "waiting"
            }
        }
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–∞—Ç–æ–≤
    for chat_name, chat_data in st.session_state.chats.items():
        status_emoji = "üü¢" if chat_data["status"] == "active" else "üü°"
        last_message = chat_data["messages"][-1]["text"][:50] + "..." if len(chat_data["messages"][-1]["text"]) > 50 else chat_data["messages"][-1]["text"]
        
        if st.button(f"{status_emoji} {chat_name}\n{last_message}", key=f"chat_{chat_name}"):
            st.session_state.current_chat = chat_name

with col2:
    st.header("üí≠ –î–∏–∞–ª–æ–≥ —Å –∫–ª–∏–µ–Ω—Ç–æ–º")
    
    # –í—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç
    if 'current_chat' in st.session_state:
        current_chat = st.session_state.current_chat
        st.subheader(f"–ß–∞—Ç: {current_chat}")
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
        chat_messages = st.session_state.chats[current_chat]["messages"]
        
        for message in chat_messages:
            if message["type"] == "user":
                st.markdown(f'<div class="chat-message user-message"><strong>–ö–ª–∏–µ–Ω—Ç:</strong> {message["text"]}<br><small>{message["time"]}</small></div>', unsafe_allow_html=True)
            else:
                st.markdown(f'<div class="chat-message support-message"><strong>{operator_name}:</strong> {message["text"]}<br><small>{message["time"]}</small></div>', unsafe_allow_html=True)
        
        # –ü–æ–ª–µ –≤–≤–æ–¥–∞
        st.subheader("‚úçÔ∏è –û—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É")
        user_input = st.text_area("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç:", height=100, key="message_input")
        
        # –ö–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
        col2_1, col2_2 = st.columns(2)
        
        with col2_1:
            if st.button("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å", type="primary"):
                if user_input:
                    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
                    new_message = {
                        "type": "support",
                        "text": user_input,
                        "time": datetime.now().strftime("%H:%M")
                    }
                    st.session_state.chats[current_chat]["messages"].append(new_message)
                    st.session_state.total_messages += 1
                    st.rerun()
        
        with col2_2:
            if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å"):
                st.rerun()
    else:
        st.info("–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã")

# AI –ø–æ–¥—Å–∫–∞–∑–∫–∏
st.header("ü§ñ AI –ü–æ–¥—Å–∫–∞–∑–∫–∏")

if 'current_chat' in st.session_state and st.session_state.chats[st.session_state.current_chat]["messages"]:
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
    last_user_message = None
    for message in reversed(st.session_state.chats[st.session_state.current_chat]["messages"]):
        if message["type"] == "user":
            last_user_message = message["text"]
            break
    
    if last_user_message:
        st.info(f"–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: '{last_user_message}'")
        
        # AI –ø–æ–¥—Å–∫–∞–∑–∫–∏
        col3, col4, col5 = st.columns(3)
        
        with col3:
            if st.button("üîç –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å"):
                if api_key or api_provider == "–õ–æ–∫–∞–ª—å–Ω–∞—è Ollama":
                    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ AI API
                    st.session_state.ai_suggestions_used += 1
                    st.success("–ó–∞–ø—Ä–æ—Å –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –∫–∞–∫: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞'")
                    st.info("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –£—Ç–æ—á–Ω–∏—Ç–µ, —Å —á–µ–º –∏–º–µ–Ω–Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –º–æ–±–∏–ª—å–Ω—ã–π –±–∞–Ω–∫")
                else:
                    st.error("–£–∫–∞–∂–∏—Ç–µ API –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        
        with col4:
            if st.button("üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ"):
                if api_key or api_provider == "–õ–æ–∫–∞–ª—å–Ω–∞—è Ollama":
                    st.session_state.ai_suggestions_used += 1
                    st.success("–†–µ—à–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ!")
                    st.info("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ '–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?'")
                else:
                    st.error("–£–∫–∞–∂–∏—Ç–µ API –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        
        with col5:
            if st.button("üìû –ü–µ—Ä–µ–¥–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É"):
                if api_key or api_provider == "–õ–æ–∫–∞–ª—å–Ω–∞—è Ollama":
                    st.session_state.ai_suggestions_used += 1
                    st.success("–ó–∞–ø—Ä–æ—Å –ø–µ—Ä–µ–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É!")
                    st.info("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –í–∞—à –≤–æ–ø—Ä–æ—Å –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 2-4 —á–∞—Å–æ–≤ –≤ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏.")
                else:
                    st.error("–£–∫–∞–∂–∏—Ç–µ API –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
        col6, col7 = st.columns(2)
        
        with col6:
            if st.button("‚ùì –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É—Ç–æ—á–Ω–µ–Ω–∏—è"):
                if api_key or api_provider == "–õ–æ–∫–∞–ª—å–Ω–∞—è Ollama":
                    st.session_state.ai_suggestions_used += 1
                    st.success("–£—Ç–æ—á–Ω–µ–Ω–∏—è —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω—ã!")
                    st.info("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ: –∫–æ–≥–¥–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞, –∫–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è, –ø—Ä–æ–±–æ–≤–∞–ª–∏ –ª–∏ –≤—ã –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?")
                else:
                    st.error("–£–∫–∞–∂–∏—Ç–µ API –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        
        with col7:
            if st.button("üìä –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã"):
                if api_key or api_provider == "–õ–æ–∫–∞–ª—å–Ω–∞—è Ollama":
                    st.session_state.ai_suggestions_used += 1
                    st.success("–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω!")
                    st.info("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ü—Ä–æ–±–ª–µ–º–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Å—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞.")
                else:
                    st.error("–£–∫–∞–∂–∏—Ç–µ API –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
    else:
        st.warning("–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
else:
    st.info("–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI –ø–æ–¥—Å–∫–∞–∑–æ–∫")

# –ü–æ–¥–≤–∞–ª
st.markdown("---")
st.markdown("""
<div style='text-align: center; color: #666;'>
    <p>üè¶ RAG Support Bot - –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±–∞–Ω–∫–∞ —Å AI</p>
    <p>–í–µ—Ä—Å–∏—è 2.0 | –°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é Streamlit</p>
</div>
""", unsafe_allow_html=True)

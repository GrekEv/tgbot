#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π CORS –ø—Ä–æ–∫—Å–∏ –¥–ª—è Ollama API
–ó–∞–ø—É—Å–∫–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Ö–æ–¥–∞ CORS –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä–∞
"""

import http.server
import socketserver
import urllib.request
import urllib.parse
import json
import sys

class CORSRequestHandler(http.server.SimpleHTTPRequestHandler):
    def end_headers(self):
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        super().end_headers()

    def do_OPTIONS(self):
        self.send_response(200)
        self.end_headers()

    def do_POST(self):
        if self.path == '/api/generate':
            try:
                # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
                content_length = int(self.headers['Content-Length'])
                post_data = self.rfile.read(content_length)
                
                # –ü–∞—Ä—Å–∏–º JSON
                request_data = json.loads(post_data.decode('utf-8'))
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ Ollama
                ollama_url = 'http://localhost:11434/api/generate'
                req = urllib.request.Request(
                    ollama_url,
                    data=json.dumps(request_data).encode('utf-8'),
                    headers={'Content-Type': 'application/json'}
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Ollama
                with urllib.request.urlopen(req) as response:
                    response_data = response.read()
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
                self.send_response(200)
                self.send_header('Content-Type', 'application/json')
                self.end_headers()
                self.wfile.write(response_data)
                
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞: {e}")
                self.send_response(500)
                self.send_header('Content-Type', 'application/json')
                self.end_headers()
                error_response = json.dumps({"error": str(e)})
                self.wfile.write(error_response.encode('utf-8'))
        else:
            self.send_response(404)
            self.end_headers()

    def do_GET(self):
        if self.path == '/api/tags':
            try:
                # –ü—Ä–æ–∫—Å–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ Ollama
                ollama_url = 'http://localhost:11434/api/tags'
                with urllib.request.urlopen(ollama_url) as response:
                    response_data = response.read()
                
                self.send_response(200)
                self.send_header('Content-Type', 'application/json')
                self.end_headers()
                self.wfile.write(response_data)
                
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞: {e}")
                self.send_response(500)
                self.send_header('Content-Type', 'application/json')
                self.end_headers()
                error_response = json.dumps({"error": str(e)})
                self.wfile.write(error_response.encode('utf-8'))
        else:
            self.send_response(404)
            self.end_headers()

def main():
    PORT = 8080
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫ CORS –ø—Ä–æ–∫—Å–∏ –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
    print(f"üåê –ü—Ä–æ–∫—Å–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ Ollama (localhost:11434)")
    print(f"üì° –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:{PORT}")
    print("=" * 50)
    
    try:
        with socketserver.TCPServer(("", PORT), CORSRequestHandler) as httpd:
            print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:{PORT}")
            print("üîÑ –ü—Ä–æ–∫—Å–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ Ollama...")
            print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
            httpd.serve_forever()
    except KeyboardInterrupt:
        print("\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")

if __name__ == "__main__":
    main()
